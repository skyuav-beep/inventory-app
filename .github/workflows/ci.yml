name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

  test-api:
    runs-on: ubuntu-latest
    needs: lint-and-format
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/inventory_test
      E2E_USE_REAL_DB: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Create test database
        env:
          PGPASSWORD: postgres
        run: psql -h localhost -U postgres -c "CREATE DATABASE inventory_test;"

      - name: Run Prisma migrations
        run: npm --workspace apps/api run prisma:migrate:deploy

      - name: Run API tests (unit + e2e)
        run: npm --workspace apps/api test

  deploy-production:
    runs-on: ubuntu-latest
    needs: test-api
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add remote host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 218.38.52.136 >> ~/.ssh/known_hosts

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 218.38.52.136
          username: steve
          key: ${{ secrets.DEPLOY_KEY }}
          key_type: ed25519
          script: |
            set -euo pipefail
            cd /home/steve/inventory-app
            git pull
            cd infra
            docker compose pull
            docker compose up -d
            cd ..
            npm install
            npm run build
            pm2 restart api
